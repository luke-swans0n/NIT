import pandas as pd
import numpy as np

def chunkstring(string, length):
    return [string[0+i:length+i] for i in range(0, len(string), length)]

dxef stubs_sorter(df, stubs_list):
    cols_list = []
    for stub in stubs_list:
        lengths = set([len(stub)+1, len(stub)+2])
        cols_list += [col for col in df.columns if stub in col and len(col) in lengths]
    if any('48' in col for col in cols_list):
        special_case = ['EMPSTAT1', 'TYPWRKR7', 'TYPWRKR3', 'TYPWRKR8', 'EMPSTAT7', 'EMPSTAT9',
           'TYPWRKR1', 'EMPSTAT8', 'TYPWRKR6', 'TYPWRKR9', 'EMPSTAT2', 'EMPSTAT4',
           'TYPWRKR2', 'EMPSTAT3', 'TYPWRKR5', 'EMPSTAT6', 'EMPSTAT5', 'TYPWRKR4']
        for col in special_case:
            cols_list.remove(col)
    #cols_list = [col for col in gary_df.columns if stubs48[0] in col]
    cols_list.append('PERNUM')
    #gary_df[cols_list]
    #gary_df['id'] = gary_df.index
    df_long = pd.wide_to_long(gary_df[cols_list], stubnames=stubs_list, i ='PERNUM', j="period")
    return df_long

def chunkstring(string, length):
    return [string[0+i:length+i] for i in range(0, len(string), length)]
def stub_maker(df, list_of_lengths):
    col_dict = {}
    stub_dict = {}
    for length in list_of_lengths:
        col_dict[length] = [col for col in df.columns if length in col]
    for length in col_dict:
        stub_cols = []
        for column in col_dict[length]:
            numeric_length = int(length[1:])
            if numeric_length == 73:
                numeric_length = 5
            stub = column.split('-')[0][:-1]
            stub_cols.append(stub)
            leng = int(df[column].str.len().unique() / numeric_length)
            df[column] = df[column].apply(chunkstring, args=[leng] )
        stub_dict[length] = stub_cols
    return stub_dict
